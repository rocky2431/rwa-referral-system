"""create_teams_and_quiz_tables

Revision ID: 0f71c5eb411b
Revises: 1d298e2ed413
Create Date: 2025-10-22 01:17:06.816729

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0f71c5eb411b'
down_revision: Union[str, None] = '1d298e2ed413'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('task_key', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon_url', sa.Text(), nullable=True),
    sa.Column('task_type', sa.Enum('DAILY', 'WEEKLY', 'ONCE', 'TEAM', name='task_type'), nullable=False),
    sa.Column('trigger_type', sa.Enum('AUTO', 'MANUAL', 'EVENT', name='task_trigger'), nullable=True),
    sa.Column('target_type', sa.String(length=50), nullable=True),
    sa.Column('target_value', sa.Integer(), nullable=True),
    sa.Column('reward_points', sa.Integer(), nullable=False),
    sa.Column('reward_experience', sa.Integer(), nullable=True),
    sa.Column('bonus_multiplier', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('min_level_required', sa.Integer(), nullable=True),
    sa.Column('max_completions_per_user', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('min_level_required >= 1 AND min_level_required <= 100', name='check_min_level_range'),
    sa.CheckConstraint('priority >= 0', name='check_priority_non_negative'),
    sa.CheckConstraint('reward_experience >= 0', name='check_reward_exp_non_negative'),
    sa.CheckConstraint('reward_points > 0', name='check_reward_points_positive'),
    sa.CheckConstraint('target_value >= 1', name='check_target_value_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_is_active'), 'tasks', ['is_active'], unique=False)
    op.create_index(op.f('ix_tasks_priority'), 'tasks', ['priority'], unique=False)
    op.create_index(op.f('ix_tasks_task_key'), 'tasks', ['task_key'], unique=True)
    op.create_index(op.f('ix_tasks_task_type'), 'tasks', ['task_type'], unique=False)
    op.create_table('daily_quiz_sessions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('session_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.Column('questions_answered', sa.Integer(), nullable=True),
    sa.Column('correct_count', sa.Integer(), nullable=True),
    sa.Column('total_points_earned', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('correct_count <= questions_answered', name='check_correct_lte_answered'),
    sa.CheckConstraint('correct_count >= 0', name='check_correct_count_non_negative'),
    sa.CheckConstraint('questions_answered <= 5', name='check_max_questions'),
    sa.CheckConstraint('questions_answered >= 0', name='check_questions_answered_non_negative'),
    sa.CheckConstraint('total_points_earned >= 0', name='check_total_points_non_negative'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_quiz_sessions_id'), 'daily_quiz_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_daily_quiz_sessions_user_id'), 'daily_quiz_sessions', ['user_id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('option_a', sa.String(length=200), nullable=False),
    sa.Column('option_b', sa.String(length=200), nullable=False),
    sa.Column('option_c', sa.String(length=200), nullable=True),
    sa.Column('option_d', sa.String(length=200), nullable=True),
    sa.Column('correct_answer', sa.CHAR(length=1), nullable=False),
    sa.Column('difficulty', sa.Enum('EASY', 'MEDIUM', 'HARD', name='question_difficulty'), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String(length=100)), nullable=True),
    sa.Column('reward_points', sa.Integer(), nullable=False),
    sa.Column('source', sa.Enum('ADMIN', 'USER_SUBMIT', 'API', name='question_source'), nullable=True),
    sa.Column('submitted_by', sa.BigInteger(), nullable=True),
    sa.Column('total_answers', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'ACTIVE', 'DISABLED', name='question_status'), nullable=True),
    sa.Column('reviewed_by', sa.BigInteger(), nullable=True),
    sa.Column('reviewed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('reject_reason', sa.Text(), nullable=True),
    sa.Column('valid_from', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('valid_until', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("correct_answer IN ('A', 'B', 'C', 'D')", name='check_correct_answer_valid'),
    sa.CheckConstraint('correct_answers <= total_answers', name='check_correct_lte_total'),
    sa.CheckConstraint('correct_answers >= 0', name='check_correct_answers_non_negative'),
    sa.CheckConstraint('reward_points > 0', name='check_reward_points_positive'),
    sa.CheckConstraint('total_answers >= 0', name='check_total_answers_non_negative'),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['submitted_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_category'), 'questions', ['category'], unique=False)
    op.create_index(op.f('ix_questions_difficulty'), 'questions', ['difficulty'], unique=False)
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_index(op.f('ix_questions_status'), 'questions', ['status'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('logo_url', sa.Text(), nullable=True),
    sa.Column('captain_id', sa.BigInteger(), nullable=False),
    sa.Column('member_count', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.BigInteger(), nullable=False),
    sa.Column('active_member_count', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('experience', sa.BigInteger(), nullable=False),
    sa.Column('reward_pool', sa.BigInteger(), nullable=False),
    sa.Column('last_distribution_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('require_approval', sa.Boolean(), nullable=False),
    sa.Column('max_members', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('disbanded_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.CheckConstraint('level >= 1 AND level <= 100', name='check_level_range'),
    sa.CheckConstraint('max_members >= 1 AND max_members <= 1000', name='check_max_members_range'),
    sa.CheckConstraint('member_count >= 0', name='check_member_count_positive'),
    sa.CheckConstraint('reward_pool >= 0', name='check_reward_pool_positive'),
    sa.CheckConstraint('total_points >= 0', name='check_total_points_positive'),
    sa.ForeignKeyConstraint(['captain_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teams_captain_id'), 'teams', ['captain_id'], unique=False)
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_index(op.f('ix_teams_name'), 'teams', ['name'], unique=True)
    op.create_table('user_tasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('current_value', sa.Integer(), nullable=True),
    sa.Column('target_value', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('IN_PROGRESS', 'COMPLETED', 'CLAIMED', 'EXPIRED', name='user_task_status'), nullable=True),
    sa.Column('reward_points', sa.Integer(), nullable=False),
    sa.Column('bonus_points', sa.Integer(), nullable=True),
    sa.Column('is_claimed', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('claimed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('task_metadata', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('bonus_points >= 0', name='check_bonus_points_non_negative'),
    sa.CheckConstraint('current_value >= 0', name='check_current_value_non_negative'),
    sa.CheckConstraint('reward_points > 0', name='check_ut_reward_points_positive'),
    sa.CheckConstraint('target_value >= 1', name='check_ut_target_value_positive'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_tasks_expires_at'), 'user_tasks', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_tasks_id'), 'user_tasks', ['id'], unique=False)
    op.create_index(op.f('ix_user_tasks_status'), 'user_tasks', ['status'], unique=False)
    op.create_index(op.f('ix_user_tasks_task_id'), 'user_tasks', ['task_id'], unique=False)
    op.create_index(op.f('ix_user_tasks_user_id'), 'user_tasks', ['user_id'], unique=False)
    op.create_table('team_members',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('team_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('role', sa.Enum('CAPTAIN', 'ADMIN', 'MEMBER', name='team_member_role'), nullable=False),
    sa.Column('contribution_points', sa.BigInteger(), nullable=False),
    sa.Column('tasks_completed', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'PENDING', 'REJECTED', 'LEFT', name='team_member_status'), nullable=False),
    sa.Column('joined_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('approved_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('left_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('contribution_points >= 0', name='check_contribution_positive'),
    sa.CheckConstraint('tasks_completed >= 0', name='check_tasks_completed_positive'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('team_id', 'user_id', name='unique_team_user')
    )
    op.create_index('idx_team_members_contribution', 'team_members', ['contribution_points'], unique=False)
    op.create_index('idx_team_members_role', 'team_members', ['role'], unique=False)
    op.create_index(op.f('ix_team_members_id'), 'team_members', ['id'], unique=False)
    op.create_index(op.f('ix_team_members_status'), 'team_members', ['status'], unique=False)
    op.create_index(op.f('ix_team_members_team_id'), 'team_members', ['team_id'], unique=False)
    op.create_index(op.f('ix_team_members_user_id'), 'team_members', ['user_id'], unique=False)
    op.create_table('team_tasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('team_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('task_type', sa.String(length=50), nullable=True),
    sa.Column('target_value', sa.Integer(), nullable=False),
    sa.Column('current_value', sa.Integer(), nullable=False),
    sa.Column('reward_points', sa.BigInteger(), nullable=False),
    sa.Column('bonus_points', sa.BigInteger(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'EXPIRED', 'CANCELLED', name='team_task_status'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('bonus_points >= 0', name='check_bonus_points_positive'),
    sa.CheckConstraint('current_value >= 0', name='check_current_value_positive'),
    sa.CheckConstraint('reward_points >= 0', name='check_reward_points_positive'),
    sa.CheckConstraint('start_time < end_time', name='check_time_range'),
    sa.CheckConstraint('target_value > 0', name='check_target_value_positive'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_team_tasks_end_time', 'team_tasks', ['end_time'], unique=False)
    op.create_index(op.f('ix_team_tasks_id'), 'team_tasks', ['id'], unique=False)
    op.create_index(op.f('ix_team_tasks_status'), 'team_tasks', ['status'], unique=False)
    op.create_index(op.f('ix_team_tasks_team_id'), 'team_tasks', ['team_id'], unique=False)
    op.create_table('user_answers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('question_id', sa.BigInteger(), nullable=False),
    sa.Column('user_answer', sa.CHAR(length=1), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('answer_time', sa.Integer(), nullable=True),
    sa.Column('answered_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('answer_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("user_answer IN ('A', 'B', 'C', 'D')", name='check_user_answer_valid'),
    sa.CheckConstraint('answer_time >= 0', name='check_answer_time_non_negative'),
    sa.CheckConstraint('points_earned >= 0', name='check_points_earned_non_negative'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_answers_answer_date'), 'user_answers', ['answer_date'], unique=False)
    op.create_index(op.f('ix_user_answers_id'), 'user_answers', ['id'], unique=False)
    op.create_index(op.f('ix_user_answers_question_id'), 'user_answers', ['question_id'], unique=False)
    op.create_index(op.f('ix_user_answers_user_id'), 'user_answers', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_answers_user_id'), table_name='user_answers')
    op.drop_index(op.f('ix_user_answers_question_id'), table_name='user_answers')
    op.drop_index(op.f('ix_user_answers_id'), table_name='user_answers')
    op.drop_index(op.f('ix_user_answers_answer_date'), table_name='user_answers')
    op.drop_table('user_answers')
    op.drop_index(op.f('ix_team_tasks_team_id'), table_name='team_tasks')
    op.drop_index(op.f('ix_team_tasks_status'), table_name='team_tasks')
    op.drop_index(op.f('ix_team_tasks_id'), table_name='team_tasks')
    op.drop_index('idx_team_tasks_end_time', table_name='team_tasks')
    op.drop_table('team_tasks')
    op.drop_index(op.f('ix_team_members_user_id'), table_name='team_members')
    op.drop_index(op.f('ix_team_members_team_id'), table_name='team_members')
    op.drop_index(op.f('ix_team_members_status'), table_name='team_members')
    op.drop_index(op.f('ix_team_members_id'), table_name='team_members')
    op.drop_index('idx_team_members_role', table_name='team_members')
    op.drop_index('idx_team_members_contribution', table_name='team_members')
    op.drop_table('team_members')
    op.drop_index(op.f('ix_user_tasks_user_id'), table_name='user_tasks')
    op.drop_index(op.f('ix_user_tasks_task_id'), table_name='user_tasks')
    op.drop_index(op.f('ix_user_tasks_status'), table_name='user_tasks')
    op.drop_index(op.f('ix_user_tasks_id'), table_name='user_tasks')
    op.drop_index(op.f('ix_user_tasks_expires_at'), table_name='user_tasks')
    op.drop_table('user_tasks')
    op.drop_index(op.f('ix_teams_name'), table_name='teams')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_index(op.f('ix_teams_captain_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_questions_status'), table_name='questions')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_difficulty'), table_name='questions')
    op.drop_index(op.f('ix_questions_category'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_daily_quiz_sessions_user_id'), table_name='daily_quiz_sessions')
    op.drop_index(op.f('ix_daily_quiz_sessions_id'), table_name='daily_quiz_sessions')
    op.drop_table('daily_quiz_sessions')
    op.drop_index(op.f('ix_tasks_task_type'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_task_key'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_priority'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_is_active'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    # ### end Alembic commands ###
