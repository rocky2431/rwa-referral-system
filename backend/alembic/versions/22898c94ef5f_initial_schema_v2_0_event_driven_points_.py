"""Initial schema v2.0 - event-driven points system

Revision ID: 22898c94ef5f
Revises: 
Create Date: 2025-10-21 12:38:44.323165

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '22898c94ef5f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('wallet_address', sa.String(length=42), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.BigInteger(), nullable=True),
    sa.Column('total_points', sa.BigInteger(), nullable=True),
    sa.Column('total_invited', sa.Integer(), nullable=True),
    sa.Column('total_tasks_completed', sa.Integer(), nullable=True),
    sa.Column('total_questions_answered', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('last_active_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('consecutive_login_days', sa.Integer(), nullable=True),
    sa.Column('last_login_date', sa.DATE(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('banned_until', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("wallet_address ~ '^0x[a-fA-F0-9]{40}$'", name='wallet_address_format'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_last_active_at'), 'users', ['last_active_at'], unique=False)
    op.create_index(op.f('ix_users_level'), 'users', ['level'], unique=False)
    op.create_index(op.f('ix_users_total_points'), 'users', ['total_points'], unique=False)
    op.create_index(op.f('ix_users_wallet_address'), 'users', ['wallet_address'], unique=True)
    op.create_table('point_transactions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('transaction_type', sa.Enum('REFERRAL_L1', 'REFERRAL_L2', 'TASK_DAILY', 'TASK_WEEKLY', 'TASK_ONCE', 'QUIZ_CORRECT', 'TEAM_REWARD', 'PURCHASE', 'ADMIN_GRANT', 'EXCHANGE_TOKEN', 'SPEND_ITEM', name='point_transaction_type'), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('balance_after', sa.BigInteger(), nullable=False),
    sa.Column('related_task_id', sa.BigInteger(), nullable=True),
    sa.Column('related_user_id', sa.BigInteger(), nullable=True),
    sa.Column('related_team_id', sa.BigInteger(), nullable=True),
    sa.Column('related_question_id', sa.BigInteger(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('extra_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('amount != 0', name='amount_not_zero'),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_point_transactions_created_at'), 'point_transactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_point_transactions_id'), 'point_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_point_transactions_related_user_id'), 'point_transactions', ['related_user_id'], unique=False)
    op.create_index(op.f('ix_point_transactions_transaction_type'), 'point_transactions', ['transaction_type'], unique=False)
    op.create_index(op.f('ix_point_transactions_user_id'), 'point_transactions', ['user_id'], unique=False)
    op.create_table('referral_relations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('referee_id', sa.BigInteger(), nullable=False),
    sa.Column('referrer_id', sa.BigInteger(), nullable=False),
    sa.Column('blockchain_tx_hash', sa.String(length=66), nullable=True),
    sa.Column('blockchain_block_number', sa.BigInteger(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('total_rewards_given', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('bound_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('synced_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('referee_id != referrer_id', name='no_self_referral'),
    sa.ForeignKeyConstraint(['referee_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['referrer_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referral_relations_blockchain_tx_hash'), 'referral_relations', ['blockchain_tx_hash'], unique=False)
    op.create_index(op.f('ix_referral_relations_id'), 'referral_relations', ['id'], unique=False)
    op.create_index(op.f('ix_referral_relations_level'), 'referral_relations', ['level'], unique=False)
    op.create_index(op.f('ix_referral_relations_referee_id'), 'referral_relations', ['referee_id'], unique=True)
    op.create_index(op.f('ix_referral_relations_referrer_id'), 'referral_relations', ['referrer_id'], unique=False)
    op.create_table('user_points',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('available_points', sa.BigInteger(), nullable=True),
    sa.Column('frozen_points', sa.BigInteger(), nullable=True),
    sa.Column('total_earned', sa.BigInteger(), nullable=True),
    sa.Column('total_spent', sa.BigInteger(), nullable=True),
    sa.Column('points_from_referral', sa.BigInteger(), nullable=True),
    sa.Column('points_from_tasks', sa.BigInteger(), nullable=True),
    sa.Column('points_from_quiz', sa.BigInteger(), nullable=True),
    sa.Column('points_from_team', sa.BigInteger(), nullable=True),
    sa.Column('points_from_purchase', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('available_points >= 0', name='points_non_negative'),
    sa.CheckConstraint('frozen_points >= 0', name='frozen_non_negative'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_points_available_points'), 'user_points', ['available_points'], unique=False)
    op.create_index(op.f('ix_user_points_id'), 'user_points', ['id'], unique=False)
    op.create_index(op.f('ix_user_points_user_id'), 'user_points', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_points_user_id'), table_name='user_points')
    op.drop_index(op.f('ix_user_points_id'), table_name='user_points')
    op.drop_index(op.f('ix_user_points_available_points'), table_name='user_points')
    op.drop_table('user_points')
    op.drop_index(op.f('ix_referral_relations_referrer_id'), table_name='referral_relations')
    op.drop_index(op.f('ix_referral_relations_referee_id'), table_name='referral_relations')
    op.drop_index(op.f('ix_referral_relations_level'), table_name='referral_relations')
    op.drop_index(op.f('ix_referral_relations_id'), table_name='referral_relations')
    op.drop_index(op.f('ix_referral_relations_blockchain_tx_hash'), table_name='referral_relations')
    op.drop_table('referral_relations')
    op.drop_index(op.f('ix_point_transactions_user_id'), table_name='point_transactions')
    op.drop_index(op.f('ix_point_transactions_transaction_type'), table_name='point_transactions')
    op.drop_index(op.f('ix_point_transactions_related_user_id'), table_name='point_transactions')
    op.drop_index(op.f('ix_point_transactions_id'), table_name='point_transactions')
    op.drop_index(op.f('ix_point_transactions_created_at'), table_name='point_transactions')
    op.drop_table('point_transactions')
    op.drop_index(op.f('ix_users_wallet_address'), table_name='users')
    op.drop_index(op.f('ix_users_total_points'), table_name='users')
    op.drop_index(op.f('ix_users_level'), table_name='users')
    op.drop_index(op.f('ix_users_last_active_at'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
